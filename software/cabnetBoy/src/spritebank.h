//      >>>>>  T-I-N-Y  A-R-K-A-N-O-I-D for ATTINY85  GPL v3 <<<<
//                Programmer: Daniel Champagne 2018-2021
//                 Contact EMAIL: phoenixbozo@gmail.com
//           https://sites.google.com/view/arduino-collection

//  Tiny-tris is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.

//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.

//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

//  2023 modified to work with CH32V003 by Stefan Wagner: github.com/wagiminator.

#pragma once

#ifdef __cplusplus
extern "C" {
#endif





typedef struct GROUPE{
uint8_t ANIMREFLECT;
uint8_t launch;
uint8_t Px;
uint8_t Py;
uint8_t BlocsGrid[6][5];
float Ballxpos;   //볼 위치 
float SIMBallxpos;
float Ballypos;
float SIMBallypos;  //볼 위치 
float BallSpeedx;
float SIMBallSpeedx;
float BallSpeedy;
float SIMBallSpeedy;
int8_t TrackAngleOut;
float Ballxposflip;
float Ballyposflip;
uint8_t BALLyDecal;
uint8_t Ypos;
uint8_t TrackBary;
uint8_t TrackBaryDecal;
uint8_t LEVEL;  //게임 레벨
uint8_t LEVELSPEED;  //
uint8_t live;
uint8_t Frame;
}GROUPE;

const uint8_t  LEVEL [] = {
0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0,1,2,3,5,0,1,2,3,4,
5,1,2,3,5,5,1,2,3,4,0,1,2,3,5,0,1,2,3,4,5,5,5,5,5,0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,
0,1,2,3,4,5,5,5,5,5,5,1,2,3,4,5,1,2,3,5,5,1,2,3,4,5,1,2,3,4,5,1,2,3,5,5,1,2,3,4,
5,5,5,5,5,0,0,0,0,0,5,5,0,5,5,5,5,0,5,5,0,0,0,0,0,5,5,5,5,5};

const uint8_t  LIVE [] = {0x3E, 0x41, 0x3E};

const uint8_t  BALL [] = {0x02, 0x05, 0x02};

const uint8_t  TRACKBAR [] = {0xFE, 0x0D, 0x0B, 0xFE, 0x7F, 0xB0, 0xD0, 0x7F};

const uint8_t  BLOCKREFLECT [] = {
0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t  BLOCK [] = {
0x01, 0x3F, 0x3F, 0x3F, 0x7F, 0x00, 0x01, 0x2D, 0x1B, 0x37, 0x7F, 0x00, 0x01, 0x15, 0x2B, 0x15,
0x7F, 0x00, 0x01, 0x13, 0x25, 0x09, 0x7F, 0x00, 0x01, 0x01, 0x01, 0x01, 0x7F, 0x00, 0x7F, 0x41,
0x41, 0x41, 0x7F, 0x00
};

const uint8_t  DIGITAL [] = {
0xF0, 0x90, 0x90, 0x90, 0x90, 0x90, 0xF0, 0xE0, 0x40, 0x40, 0x40, 0x40, 0x60, 0x40, 0xF0, 0x10,
0x10, 0xF0, 0x80, 0x80, 0xF0, 0xF0, 0x80, 0x80, 0xE0, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x80, 0xF0,
0x90, 0x90, 0x90, 0xF0, 0x80, 0x80, 0xF0, 0x10, 0x10, 0xF0, 0xF0, 0x90, 0x90, 0xF0, 0x10, 0x10,
0xF0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xF0, 0xF0, 0x90, 0x90, 0xF0, 0x90, 0x90, 0xF0, 0xF0,
0x80, 0x80, 0xF0, 0x90, 0x90, 0xF0
};

const uint8_t  Music1 [] = {
125,255,125,255,0,200,125,255,125,255,145,255,145,255,145,255,145,255,145,255,
145,255,145,255,145,255,145,255,145,255,145,255,145,255,140,255,140,255,140,255,
125,255,125,255,125,255,105,255,105,255,105,255,135,255,135,255,135,255,125,255,
125,255,125,255,125,255,125,255,125,255,125,255,125,255,0,125,125,255,125,255,
125,255,125,255,125,255,125,255,125,255,125,255};


const uint8_t  back_UP [] = {
0x05,0x05,0x05,0x05,0x05,0x47,0x0F,0x08,0x0F,0x08,0x2F,0x08,0x0F,0x07,0x0D,0x05,0x05,0x05,0x05,0x05,
0x45,0x05,0x05,0x0D,0x05,0x25,0x05,0x07,0x0F,0x08,0x0F,0x08,0x0F,0x08,0x0F,0x47,0x05,0x05,0x0D,0x05,
0x25,0x05,0x05,0x05,0x0D,0x05,0x05,0x07,0x0F,0x08,0x4F,0x08,0x0F,0x08,0x0F,0x27,0x05,0x05,0x05,0x0D,
0x05,0x05,0x05,0x05,0x05,0x45,0x05,0x05,0x07,0x0F,0x28,0x0F,0x08,0x0F,0x08,0x0F,0x07,0x05,0x05,0x05,
0x45,0x05,0x05,0x0D,0x05,0x25,0x05,0x05,0x07,0x0F,0x08,0x0F,0x08,0x0F,0x08,0x4F,0x07,0x05,0x0D,0x05,
0x25,0x05,0x05,0x05,0x05,0x05,0x05
};


const uint8_t  back_DOWN [] = {
0xA0,0xA0,0xA1,0xA0,0xA4,0xE0,0xF0,0x10,0xF8,0x10,0xF0,0x10,0xF0,0xE0,0xA8,0xA0,0xA0,0xA1,0xA0,0xA4,
0xA0,0xA0,0xA0,0xA8,0xA0,0xA0,0xA0,0xE0,0xF0,0x18,0xF0,0x10,0xF1,0x10,0xF4,0xE0,0xA0,0xA0,0xA8,0xA0,
0xA0,0xA0,0xA0,0xA0,0xA8,0xA0,0xA0,0xE1,0xF0,0x14,0xF0,0x10,0xF0,0x18,0xF0,0xE0,0xA0,0xA0,0xA0,0xA8,
0xA0,0xA0,0xA1,0xA0,0xA4,0xA0,0xA0,0xA0,0xE8,0xF0,0x10,0xF0,0x10,0xF0,0x18,0xF0,0xE0,0xA1,0xA0,0xA4,
0xA0,0xA0,0xA0,0xA8,0xA0,0xA0,0xA0,0xA0,0xE0,0xF8,0x10,0xF0,0x11,0xF0,0x14,0xF0,0xE0,0xA0,0xA8,0xA0,
0xA0,0xA0,0xA0,0xA0,0xA8,0xA0,0xA0
};


const uint8_t  back_RIGHT  [] = {
0x05,0xF9,0x03,0xFE,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x07,0xFF,
0xFE,0x00,0xFE,0xAB,0xAB,0xAB,0xFE,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0xFF,0xFF,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xFF,0xFF,0x00,0xE0,0xBF,0xB0,0xBF,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x0F,0xFA,0x1A,0xFA,0x0F,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0x80,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,
0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xFF,0xFF,0x00,0x7F,0xD5,0xD5,0xD5,0x7F,0x00,0x00,0x00,
0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0xA0,0x9F,0xC0,0x7F,0x00,0x00,
0x00,0x00,0x7F,0xFF,0xE0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xE0,0xFF,0x7F,0x00
};

const uint8_t  texture [] = {
0x08,0x00,0x00,0x01,0x00,0x04,0x40,0x00,0x00,0x08,0x00,0x20,0x00,0x00,0x00
};

const uint8_t  MAIN [] = {
// 128, 64
// 0
0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0x04, 0x06, 
0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xfd, 0x6e, 0xd5, 0x7e, 0xf7, 0xfa, 0xf6, 0xff, 
0x7b, 0xbf, 0xfa, 0xff, 0xef, 0xfc, 0xff, 0xff, 
0xf6, 0xfd, 0xfe, 0xff, 0xfd, 0xf7, 0xff, 0xfe, 
0xf7, 0xfd, 0xfe, 0x00, 0xfb, 0x7f, 0x00, 0x81, 
0x04, 0x00, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 
0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0xf6, 0xfe, 0xfd, 
0x00, 0xff, 0xfe, 0xff, 0xf7, 0xde, 0xff, 0x7d, 
0xff, 0xfe, 0xaf, 0xfb, 0xff, 0xbe, 0xdf, 0xfb, 
0xff, 0xbf, 0xbd, 0x7e, 0xff, 0xeb, 0xff, 0xff, 
0xfe, 0xed, 0x2f, 0xff, 0xfe, 0x73, 0xfb, 0xe8, 
0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x62, 0x32, 
0x32, 0x62, 0xc2, 0x82, 0x02, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
0xff, 0xff, 0xff, 0xfb, 0xff, 0xfd, 0xff, 0xff, 
0xff, 0xff, 0xff, 0x7f, 0x7f, 0x3f, 0x3f, 0x1f, 
0x1f, 0x0f, 0x8f, 0x27, 0x07, 0x07, 0x07, 0x5b, 
0x03, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0x1c, 
0xfe, 0xff, 0xff, 0xbf, 0x3f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 
0xf0, 0x0f, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 
0xff, 0x1e, 0xef, 0xdf, 0xdf, 0xbf, 0xbf, 0x7f, 
0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xfd, 
0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xfa, 0xf7, 
0xbb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x8c, 0x0c, 
0x04, 0x06, 0x03, 0x00, 0x01, 0x03, 0x02, 0x04, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0xff, 0x0f, 0xf7, 0xf7, 0x07, 0x03, 0x03, 0x03, 
0x80, 0x90, 0xd8, 0xc8, 0xe0, 0x64, 0x60, 0x30, 
0x30, 0x18, 0x08, 0x08, 0x05, 0x02, 0x03, 0x83, 
0x83, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0x00, 
0xd3, 0xef, 0x9f, 0x8f, 0x3e, 0x70, 0x07, 0x0f, 
0x3d, 0x5f, 0xff, 0x3f, 0xc3, 0x00, 0xff, 0xff, 
0x7f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xf8, 0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 
0xe2, 0xe2, 0xe1, 0xf1, 0xfb, 0xfb, 0xf1, 0x0f, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0e, 
0x1c, 0x03, 0x41, 0x41, 0x41, 0x43, 0x26, 0x1c, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0xff, 0x08, 0xe9, 0xed, 0x0e, 0x06, 0x17, 0x03, 
0x01, 0x81, 0xc1, 0xc0, 0xc0, 0xe2, 0x70, 0x71, 
0x38, 0x38, 0x1c, 0x1e, 0x0e, 0x07, 0x07, 0x03, 
0x03, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0x00, 
0xff, 0xff, 0x3f, 0x0f, 0xe7, 0xf6, 0xf0, 0xf8, 
0x3b, 0x5a, 0x10, 0x10, 0x87, 0x00, 0x3e, 0xfe, 
0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xfb, 0xfb, 
0xf7, 0xf7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xf0, 
0x07, 0xe1, 0x00, 0x18, 0x3c, 0x1c, 0x9c, 0xc8, 
0xe1, 0x7f, 0x1f, 0x88, 0x10, 0x10, 0x10, 0x10, 
0x70, 0xe0, 0x80, 0x00, 0x20, 0x30, 0x70, 0xe0, 
0xc0, 0x80, 0x80, 0x80, 0xc0, 0x70, 0x3c, 0x18, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xfe, 0x81, 
0x02, 0x06, 0x0c, 0x70, 0xc0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0xff, 0xf8, 0x0f, 0xcd, 0xec, 0x06, 0x07, 0x43, 
0x03, 0x81, 0x01, 0xc1, 0x20, 0x80, 0x80, 0xd0, 
0xc0, 0xe0, 0xf0, 0xf8, 0xf8, 0xf8, 0xfc, 0xfc, 
0xfe, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xbc, 0x00, 
0xff, 0xff, 0xf0, 0xe0, 0xc3, 0xc3, 0x87, 0x07, 
0xcf, 0xce, 0xe6, 0xf6, 0xf9, 0xfc, 0x00, 0xff, 
0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xf9, 0xfb, 
0x7f, 0x7f, 0xff, 0xff, 0xfd, 0xfb, 0xff, 0xff, 
0x00, 0xff, 0xf0, 0x00, 0x1c, 0x78, 0xfa, 0x70, 
0x01, 0x00, 0x9c, 0x3f, 0x00, 0x80, 0x80, 0xc0, 
0xe0, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x03, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x1c, 0xe6, 0xc2, 0x43, 
0x44, 0x44, 0x28, 0x38, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0xff, 0xff, 0xf8, 0xfb, 0xfb, 0xfc, 0xfd, 0xfc, 
0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 
0x39, 0x7b, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 
0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xe4, 0x03, 0x7f, 0x7f, 0xff, 
0xf7, 0xe6, 0xec, 0xfd, 0xfd, 0xdd, 0xdf, 0xdf, 
0xfc, 0x03, 0xff, 0xfe, 0xc0, 0xf0, 0xf8, 0xf8, 
0x7c, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0x01, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x7c, 0x3f, 0x30, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 
0x02, 0x02, 0xb2, 0xe2, 0x80, 0x80, 0x40, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0x07, 0xe3, 0xfb, 0xfb, 0x07, 0x0f, 0xef, 
0xcf, 0x0f, 0x1f, 0xff, 0x00, 0xff, 0xff, 0x00, 
0x90, 0xa4, 0x2c, 0x6e, 0x6c, 0x21, 0x33, 0x3f, 
0x1f, 0x1f, 0x8f, 0xc7, 0xe7, 0xe1, 0xc0, 0x03, 
0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfd, 0xfc, 0xf0, 0xf8, 0xf8, 
0xf8, 0xf8, 0xf9, 0xf9, 0xf9, 0xf3, 0xf3, 0xf3, 
0xf7, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x80, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
0x01, 0x01, 0x01, 0x03, 0x7e, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xf0, 0xe3, 0xe3, 0xe1, 0xe0, 0xf0, 0xf8, 
0xf8, 0xf8, 0xfc, 0xff, 0x00, 0x1f, 0xaf, 0x00, 
0x36, 0x37, 0x37, 0xc0, 0xe0, 0xe0, 0xe0, 0xf8, 
0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
0xf1, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x01, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

};

#ifdef __cplusplus
};
#endif
